const sinon = require('sinon');

exports.stubQuery = ({model, result, isException}) => {

  const res = result;
  sinon.stub(model, 'query').returns({
    select: sinon.stub().returnsThis(),
    leftJoinRelated: sinon.stub().returnsThis(),
    leftJoin: sinon.stub().returnsThis(),
    joinRelated: sinon.stub().returnsThis(),
    join: sinon.stub().returnsThis(),
    $relatedQuery: sinon.stub().returnsThis(),
    relatedQuery: sinon.stub().returnsThis(),
    column: sinon.stub().returnsThis(),
    findOne: sinon.stub().returnsThis(),
    first: sinon.stub().returnsThis(),
    count: sinon.stub().returnsThis(),
    sum: sinon.stub().returnsThis(),
    as: sinon.stub().returnsThis(),
    distinct: sinon.stub().returnsThis(),
    where: sinon.stub().returnsThis(),
    whereRaw: sinon.stub().returnsThis(),
    andWhere: sinon.stub().returnsThis(),
    andWhereRaw: sinon.stub().returnsThis(),
    orWhere: sinon.stub().returnsThis(),
    orWhereRaw: sinon.stub().returnsThis(),
    whereNotDeleted: sinon.stub().returnsThis(),
    whereIn: sinon.stub().returnsThis(),
    groupBy: sinon.stub().returnsThis(),
    orderBy: sinon.stub().returnsThis(),
    orderByRaw: sinon.stub().returnsThis(),
    page: sinon.stub().returnsThis(),
    modifiers: sinon.stub().returnsThis(),
    verifyPassword: !isException ? sinon.stub().returns(result) : sinon.stub().throws(result),
    then: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    execute: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    delete: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    insert: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    updateAndFetchById: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    patch: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    undelete: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    patchAndFetchById: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    withGraphFetched: sinon.stub().returnsThis(),
    modifyGraph: sinon.stub().returnsThis(),
    findById: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    findByIds: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    update: !isException ? sinon.stub().resolves(result) : sinon.stub().throws(result),
    ...res,
  });
};
